---
name: Windows build

on:
  push:
    branches: [ trunk ]

jobs:
  build:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v2

      - name: Maven cache
        uses: actions/cache@v1
        with:
          path: ~/.m2/repository
          # GitHub documentation sample puts runner.os first. Not sure why, I'd
          # expect our deps to generally be platform agnostic (not contain any
          # binaries at all, and if they do, contain multiple archs/platforms).
          key: maven-${{ hashFiles('deps.edn') }}-${{ runner.os }}
          restore-keys: |
              maven-${{ hashFiles('deps.edn') }}-
              maven-

      - name: Setup GraalVM CE
        uses: DeLaGuardo/setup-graalvm@3
        with:
          graalvm-version: '20.1.0.java11'

      - name: Setup Clojure manually
        run: .\windows\ClojureSetupHeadless.ps1

      # Replace "Setup Clojure manually" with this, once it supports Windows:
      # https://github.com/DeLaGuardo/setup-clojure/issues/1
      #
      # - name: Setup Clojure
      #   uses: DeLaGuardo/setup-clojure@2.0
      #   with:
      #     tools-deps: "latest"

      - name: Show Clojure env details
        run: clojure -Sdescribe

      - name: Run tests
        run: clojure -A:test

      - name: Install VC2017 components
        # This is necessary for native-image in GraalVM JDK11. JDK8 is more complicated.
        run: .\windows\VS2017Setup.ps1

      - name: Install native-image
        run: $:env:Path += "$env:JAVA_HOME\bin"; gu.cmd install native-image

      - name: List GraalVM bin contents
        run: Get-ChildItem -Path "$env:JAVA_HOME\bin" | Format-Table

      - name: Build uberjar
        run: clj -Sdeps '{:deps {uberdeps {:mvn/version "0.1.10"}}}' -m uberdeps.uberjar

      - name: Build native-image
        run: >-
            .\.github\NativeImageWithCheese.cmd
              -jar target\fix-default-branch.jar
              --verbose
              --no-fallback
              --no-server
              -H:Name=fix-default-branch
              -H:+ReportExceptionStackTraces
              --initialize-at-build-time
              --report-unsupported-elements-at-runtime
              --allow-incomplete-classpath
              --enable-https
              -J-Dclojure.spec.skip-macros=true
              -J-Dclojure.compiler.direct-linking=true

      - name: Install upx
        run: choco install upx

      - name: Run upx
        run: upx fix-default-branch

      - uses: actions/upload-artifact@v2
        with:
          name: fix-default-branch-win64
          path: fix-default-branch
